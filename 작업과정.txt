// calendar의 오늘, main의 편집, add/edit 저장 css 통일해야함 !
position: absolute;
          right: 30px;
          font-size: 16px;
          font-family: 'pretendard-semibold';

// 기록추가시 데이터검사해서 없으면 add 잇으면 edit
// main페이지 없으면 add 잇으면 edit

// 디비에 잇는날짜 선택시 편집화면으로
// 목록 누르면 상세보기
// 편집화면에서 select돼잇도록
// main페이지 내용들 싹다수정
// for문안에 span생성은 해당테이블에 데이터가 잇을때만 생성

0. npm init

  0-1. 설치모듈들
    express, ejs, mysql2, dotenv

1. express 활용
  1-1. index.js생성
  1-2. express, ejs 모듈 설치.
  1-3. 기본코드작성 (ejs설정, 정적파일설정, form접근설정, 포트열기)
    & 기본구조만들기 (public폴더구조, views폴더)


2. 라우팅
  2-1. router.js 생성 후 index.js에서 라우팅 미들웨어로 연결
  2-2. express.Router() 메서드활용


3. 비동기로 날씨정보요청
  3-1. 사용자의 위치를 요청하고, 콜백을 실행하는 함수 호출
    navigator.geolocation.getCurrentPosition(getposFn, errposFn);

  3-2. 성공시 호출될 함수 작성
    3-2-1. 현재날씨










4. docker로 DB세팅
  4-1. docker로 mysql 이미지 컨테이너 puppy-container 생성 후 puppy-volume으로 연결해 실행 5000번포트

    docker run -d --name puppy-container -p 5000:3306 -v d:\puppydb_backup:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=1234 -e TZ=Asia/Seoul mysql --character-set-server=utf8mb4 --collation-server=utf8mb4_general_ci

  4-2. 컨테이너 내부진입
    docker exec -it puppy-container bash

  4-3. 로그인?가튼거함
    mysql -u root -p1234

  4-4. shell에서 DB만듬
    create database puppydb;
    exit로 빠져나옴
    
    아냐 이거삭제햇어 (DROP DATABASE puppydb;)
    다시 DBeaver에서 만듬
    CREATE DATABASE puppydb DEFAULT CHARACTER SET UTF8MB4;

5. DB설계
  5-1. USE puppydb;
  
  5-2. DB 스키마 작성
    다중입력 되는 checkbox 항목들은 배열형태가 아닌, 값으로 하나씩받는 여러레코드로 받을거라서
    테이블을 분리햇음 ! !

    5-2-1. 단일입력(radio 항목) 테이블
    CREATE TABLE conditionTBL (
      regdate DATE PRIMARY KEY,
      emotion VARCHAR(30)	COMMENT '기분상태',
      walk VARCHAR(30) 	COMMENT '산책유무',
      bath VARCHAR(30)	COMMENT '목욕유무',
      feed VARCHAR(30)	COMMENT '사료급여'
    ) DEFAULT CHARACTER SET UTF8MB4;

    5-2-2. 다중입력(checkbox 항목) 테이블 - health
    CREATE TABLE healthTBL (
      regdate DATE NOT NULL,
      health VARCHAR(30)
    ) DEFAULT CHARACTER SET UTF8MB4;

    5-2-3. 다중입력(checkbox 항목) 테이블 - treats
    CREATE TABLE treatsTBL (
      regdate DATE NOT NULL,
      treats VARCHAR(30)
    ) DEFAULT CHARACTER SET UTF8MB4;

  5-3. DB연결
    5-3-1. sql.js 파일 작성
      database>sql.js 만들어서
      npm i mysql2 모듈 설치

      const mysql = require('mysql2/promise'); 불러오기

      mysql.createPool()로 db랑 연결
      그 값은 보안을 위해 밑에 작성한 .env에서 값을 가져와서 작성

      ((.env 불러올때는 process.env.키값))

      const dbcon = mysql.createPool({
        host: process.env.DATABASE_HOST,
        port: process.env.DATABASE_PORT,
        user: process.env.DATABASE_USER,
        password: process.env.DATABASE_PASSWORD,
        database: process.env.DATABASE_NAME,
        connectionLimit: 10
      });

        module.exports로 내보냄 (라우터.js맨위에서 부를꺼임)

      5-3-2. .env 파일작성
        DATABASE_NAME 이런형식으로 각각 실제 연결할 DB랑 일치하도록 값써줌

      5-3-3. index.js에서 env 환경변수설정 (맨위에작성)
        dotenv 모듈 불러와서
        dotenv.config();
    
  5-4. DB사용
    5-4-1. SELECT
    router.get('/main', ()=>{})경로에 
    conditionsql, healthSql, treatsSql 쿼리문 작성
    dbcon.query()로 쿼리문 실행
    리턴값을 res.render()할 때 두번째 매개변수로 보내줌.

    5-4-2. INSERT
    conditionTBL, healthTBL, treatsTBL에 각각 따로 insert하고 select할건데
    외래키 역할을 하는 regdate라는 컬럼의 변수명이 겹치니까 각각 즉시실행 함수로 스코프를 묶어줌 !

    1) 즉시실행함수 작성(비동기요청할거라 async)
    2) conditionValue 변수에 req.body로 받아온 인풋데이터들을 객체로 할당
    3) conditionSql변수에 insert하는 쿼리문 작성 (동적으로 할당될 values()안의 값은 '?')
    4) 객체 비구조화할당을 통해 conditionValue객체에 담긴 프로퍼티(인풋데이터들)을 각각 변수에 할당 - values안에 들어갈 변수
    5) await dbcon.query(); 으로 쿼리문실행. 첫번째 매개변수 - 쿼리문, 두번째 매개변수 - 쿼리문안에 동적으로 전달할 변수(여러개면 [] 대괄호로 묶음)
    6) healthTBL, treatsTBL도 같은방식이지만, 다중입력값을 배열형태로 받아오기때문에 insert하는 쿼리문을 for문으로 감싸 dbcon.query()안의 매개변수 health,treats에 인덱스를 반복햇음.
    값을 하나 선택할 경우 문자열도 배열취급으로 한글자씩 반복하기때문에 (!== 'string') 조건의 if~else문으로 감쌋음
    7) 근데 이렇게하면 redirect 되는 페이지에 반영된 데이터가 바로 출력이 되지않고 새로고침을 해야했음.
    원인은
      1. db에 반영요청 -> 2. db에 반영완료 -> 3. redirect 실행
      이 순서가 아닌
      1. db에 반영요청 -> 3. redirect 실행 -> 3. db에 반영완료
      순서인게 문제엿던것 !
    몬가 insert즉시실행함수들과 redirect문이 같은 레벨로 있으니, 이들을 감싸는 상위함수인 .post()의 콜백함수에 async를 주고 각 즉시실행함수에 await을 주면될거같아서 햇더니 일단 해결되엇음 !